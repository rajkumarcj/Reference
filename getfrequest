import java.util.List;

public class MyClass {
    public static String getfrequest(List<String> listdetails, int counter) {
        String tempstr = "#";

        for (int i = 0; i < counter - 1; i++) {
            String currentElement = listdetails.get(counter - i - 1);

            if (!currentElement.equals("#") &&
                !currentElement.equals(tempstr) &&
                !currentElement.equals("[]")) {

                int localValue = 1;

                for (int j = 0; j < counter - i - 1; j++) {
                    if (listdetails.get(j).equals(currentElement)) {
                        localValue++;
                    }
                }

                if (localValue > 1) {
                    tempstr = currentElement;
                }
            }
        }

        return tempstr;
    }

    public static void main(String[] args) {
        // Example usage:
        // List<String> listdetails = Arrays.asList("A", "B", "C");
        // int counter = 3;
        // String result = getfrequest(listdetails, counter);
        // System.out.println(result);
    }
}



++++++

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public static double calculateMedian(List<String> stringNumbers) {
    List<Integer> numbers = new ArrayList<>();

    // Convert string numbers to integers and add them to the 'numbers' list
    for (String str : stringNumbers) {
        try {
            int num = Integer.parseInt(str);
            numbers.add(num);
        } catch (NumberFormatException e) {
            // Handle invalid input if necessary
        }
    }

    // Sort the list of integers
    Collections.sort(numbers);

    int count = numbers.size();

    if (count == 0) {
        return 0.0;
    }

    if (count % 2 == 0) {
        // If the count is even, take the average of the two middle values
        int middle1 = numbers.get(count / 2 - 1);
        int middle2 = numbers.get(count / 2);
        return (double) (middle1 + middle2) / 2;
    } else {
        // If the count is odd, return the middle element
        return (double) numbers.get(count / 2);
    }
}
